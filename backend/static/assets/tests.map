{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","super-rentals/tests/acceptance/list-rentals-test.js","super-rentals/tests/acceptance/list-rentals-test.jshint.js","super-rentals/tests/adapters/application.jshint.js","super-rentals/tests/app.jshint.js","super-rentals/tests/components/list-filter.jshint.js","super-rentals/tests/components/location-map.jshint.js","super-rentals/tests/components/rental-listing.jshint.js","super-rentals/tests/controllers/rentals.jshint.js","super-rentals/tests/controllers/rentals/index.jshint.js","super-rentals/tests/helpers/destroy-app.js","super-rentals/tests/helpers/destroy-app.jshint.js","super-rentals/tests/helpers/module-for-acceptance.js","super-rentals/tests/helpers/module-for-acceptance.jshint.js","super-rentals/tests/helpers/rental-property-type.jshint.js","super-rentals/tests/helpers/resolver.js","super-rentals/tests/helpers/resolver.jshint.js","super-rentals/tests/helpers/start-app.js","super-rentals/tests/helpers/start-app.jshint.js","super-rentals/tests/integration/components/list-filter-test.js","super-rentals/tests/integration/components/list-filter-test.jshint.js","super-rentals/tests/integration/components/location-map-test.js","super-rentals/tests/integration/components/location-map-test.jshint.js","super-rentals/tests/integration/components/rental-listing-test.js","super-rentals/tests/integration/components/rental-listing-test.jshint.js","super-rentals/tests/models/rental.jshint.js","super-rentals/tests/resolver.jshint.js","super-rentals/tests/router.jshint.js","super-rentals/tests/routes/about.jshint.js","super-rentals/tests/routes/contact.jshint.js","super-rentals/tests/routes/index.jshint.js","super-rentals/tests/routes/rentals.jshint.js","super-rentals/tests/routes/rentals/index.jshint.js","super-rentals/tests/routes/rentals/show.jshint.js","super-rentals/tests/services/maps.jshint.js","super-rentals/tests/test-helper.js","super-rentals/tests/test-helper.jshint.js","super-rentals/tests/unit/adapters/application-test.js","super-rentals/tests/unit/adapters/application-test.jshint.js","super-rentals/tests/unit/controllers/rentals-test.js","super-rentals/tests/unit/controllers/rentals-test.jshint.js","super-rentals/tests/unit/controllers/rentals/index-test.js","super-rentals/tests/unit/controllers/rentals/index-test.jshint.js","super-rentals/tests/unit/helpers/rental-property-type-test.js","super-rentals/tests/unit/helpers/rental-property-type-test.jshint.js","super-rentals/tests/unit/models/rental-test.js","super-rentals/tests/unit/models/rental-test.jshint.js","super-rentals/tests/unit/routes/about-test.js","super-rentals/tests/unit/routes/about-test.jshint.js","super-rentals/tests/unit/routes/contact-test.js","super-rentals/tests/unit/routes/contact-test.jshint.js","super-rentals/tests/unit/routes/index-test.js","super-rentals/tests/unit/routes/index-test.jshint.js","super-rentals/tests/unit/routes/rentals-test.js","super-rentals/tests/unit/routes/rentals-test.jshint.js","super-rentals/tests/unit/routes/rentals/index-test.js","super-rentals/tests/unit/routes/rentals/index-test.jshint.js","super-rentals/tests/unit/routes/rentals/show-test.js","super-rentals/tests/unit/routes/rentals/show-test.jshint.js","super-rentals/tests/unit/services/maps-test.js","super-rentals/tests/unit/services/maps-test.jshint.js","super-rentals/tests/unit/utils/google-maps-test.js","super-rentals/tests/unit/utils/google-maps-test.jshint.js","super-rentals/tests/utils/google-maps.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('super-rentals/tests/acceptance/list-rentals-test', ['exports', 'qunit', 'super-rentals/tests/helpers/module-for-acceptance', 'ember'], function (exports, _qunit, _superRentalsTestsHelpersModuleForAcceptance, _ember) {\n\n  var StubMapService = _ember['default'].Service.extend({\n    getMapElement: function getMapElement() {\n      return document.createElement('div');\n    }\n  });\n\n  (0, _superRentalsTestsHelpersModuleForAcceptance['default'])('Acceptance | list rentals', {\n    beforeEach: function beforeEach() {\n      this.application.register('service:stubMaps', StubMapService);\n      this.application.inject('component:location-map', 'maps', 'service:stubMaps');\n    }\n  });\n\n  (0, _qunit.test)('should redirect to rentals route', function (assert) {\n    visit('/');\n    andThen(function () {\n      assert.equal(currentURL(), '/rentals', 'should redirect automatically');\n    });\n  });\n\n  (0, _qunit.test)('should list available rentals.', function (assert) {\n    visit('/');\n    andThen(function () {\n      assert.equal(find('.listing').length, 3, 'should see 3 listings');\n    });\n  });\n\n  (0, _qunit.test)('should link to information about the company.', function (assert) {\n    visit('/');\n    click('a:contains(\"About\")');\n    andThen(function () {\n      assert.equal(currentURL(), '/about', 'should navigate to about');\n    });\n  });\n\n  (0, _qunit.test)('should link to contact information.', function (assert) {\n    visit('/');\n    click('a:contains(\"Contact\")');\n    andThen(function () {\n      assert.equal(currentURL(), '/contact', 'should navigate to contact');\n    });\n  });\n\n  (0, _qunit.test)('should filter the list of rentals by city.', function (assert) {\n    visit('/');\n    fillIn('.list-filter input', 'seattle');\n    keyEvent('.list-filter input', 'keyup', 69);\n    andThen(function () {\n      assert.equal(find('.listing').length, 1, 'should show 1 listing');\n      assert.equal(find('.listing .location:contains(\"Seattle\")').length, 1, 'should contain 1 listing with location Seattle');\n    });\n  });\n\n  (0, _qunit.test)('should show details for a specific rental', function (assert) {\n    visit('/rentals');\n    click('a:contains(\"Grand Old Mansion\")');\n    andThen(function () {\n      assert.equal(currentURL(), '/rentals/grand-old-mansion', 'should navigate to show route');\n      assert.equal(find('.show-listing h2').text(), \"Grand Old Mansion\", 'should list rental title');\n      assert.equal(find('.description').length, 1, 'should list a description of the property');\n    });\n  });\n});","define('super-rentals/tests/acceptance/list-rentals-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/list-rentals-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/list-rentals-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('super-rentals/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('super-rentals/tests/components/list-filter.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/list-filter.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/list-filter.js should pass jshint.');\n  });\n});","define('super-rentals/tests/components/location-map.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/location-map.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/location-map.js should pass jshint.');\n  });\n});","define('super-rentals/tests/components/rental-listing.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/rental-listing.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/rental-listing.js should pass jshint.');\n  });\n});","define('super-rentals/tests/controllers/rentals.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/rentals.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/rentals.js should pass jshint.');\n  });\n});","define('super-rentals/tests/controllers/rentals/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/rentals/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/rentals/index.js should pass jshint.');\n  });\n});","define('super-rentals/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n    server.shutdown();\n  }\n});","define('super-rentals/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('super-rentals/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'super-rentals/tests/helpers/start-app', 'super-rentals/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _superRentalsTestsHelpersStartApp, _superRentalsTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _superRentalsTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _superRentalsTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('super-rentals/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('super-rentals/tests/helpers/rental-property-type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/rental-property-type.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/rental-property-type.js should pass jshint.');\n  });\n});","define('super-rentals/tests/helpers/resolver', ['exports', 'super-rentals/resolver', 'super-rentals/config/environment'], function (exports, _superRentalsResolver, _superRentalsConfigEnvironment) {\n\n  var resolver = _superRentalsResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _superRentalsConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _superRentalsConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('super-rentals/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('super-rentals/tests/helpers/start-app', ['exports', 'ember', 'super-rentals/app', 'super-rentals/config/environment'], function (exports, _ember, _superRentalsApp, _superRentalsConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _superRentalsConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _superRentalsApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('super-rentals/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('super-rentals/tests/integration/components/list-filter-test', ['exports', 'ember-qunit', 'ember-test-helpers/wait', 'rsvp'], function (exports, _emberQunit, _emberTestHelpersWait, _rsvp) {\n\n  (0, _emberQunit.moduleForComponent)('list-filter', 'Integration | Component | list filter', {\n    integration: true\n  });\n\n  var ITEMS = [{ city: 'San Francisco' }, { city: 'Portland' }, { city: 'Seattle' }];\n  var FILTERED_ITEMS = [{ city: 'San Francisco' }];\n\n  (0, _emberQunit.test)('should update with matching listings', function (assert) {\n    var _this = this;\n\n    // we want our actions to return promises, since they are potentially fetching data asynchronously\n    this.on('filterByCity', function (val) {\n      if (val === '') {\n        return _rsvp['default'].resolve(ITEMS);\n      } else {\n        return _rsvp['default'].resolve(FILTERED_ITEMS);\n      }\n    });\n\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        var child0 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.9.0',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 4,\n                  'column': 6\n                },\n                'end': {\n                  'line': 8,\n                  'column': 6\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 1,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode('        ');\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement('li');\n              dom.setAttribute(el1, 'class', 'city');\n              var el2 = dom.createTextNode('\\n          ');\n              dom.appendChild(el1, el2);\n              var el2 = dom.createComment('');\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode('\\n        ');\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode('\\n');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);\n              return morphs;\n            },\n            statements: [['content', 'item.city', ['loc', [null, [6, 10], [6, 23]]], 0, 0, 0, 0]],\n            locals: ['item'],\n            templates: []\n          };\n        })();\n\n        return {\n          meta: {\n            'revision': 'Ember@2.9.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 10,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement('ul');\n            var el2 = dom.createTextNode('\\n');\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment('');\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode('      ');\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);\n            return morphs;\n          },\n          statements: [['block', 'each', [['get', 'results', ['loc', [null, [4, 14], [4, 21]]], 0, 0, 0, 0]], [], 0, null, ['loc', [null, [4, 6], [8, 15]]]]],\n          locals: ['results'],\n          templates: [child0]\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@2.9.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 11,\n              'column': 4\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('    ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'list-filter', [], ['filter', ['subexpr', 'action', ['filterByCity'], [], ['loc', [null, [2, 26], [2, 49]]], 0, 0]], 0, null, ['loc', [null, [2, 4], [10, 20]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    return (0, _emberTestHelpersWait['default'])().then(function () {\n      assert.equal(_this.$('.city').length, 3);\n      assert.equal(_this.$('.city').first().text().trim(), 'San Francisco');\n    });\n  });\n});","define('super-rentals/tests/integration/components/list-filter-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/list-filter-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/list-filter-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/integration/components/location-map-test', ['exports', 'ember-qunit', 'ember'], function (exports, _emberQunit, _ember) {\n\n  var StubMapService = _ember['default'].Service.extend({\n    getMapElement: function getMapElement(location) {\n      this.set('calledWithLocation', location);\n      return document.createElement('div');\n    }\n  });\n\n  (0, _emberQunit.moduleForComponent)('location-map', 'Integration | Component | location map', {\n    integration: true,\n    beforeEach: function beforeEach() {\n      //run before each test\n      this.register('service:maps', StubMapService);\n      this.inject.service('maps', { as: 'mapsService' });\n    }\n  });\n\n  (0, _emberQunit.test)('should append map element to container element', function (assert) {\n    this.set('myLocation', 'New York');\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'revision': 'Ember@2.9.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 36\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'location-map', [], ['location', ['subexpr', '@mut', [['get', 'myLocation', ['loc', [null, [1, 24], [1, 34]]], 0, 0, 0, 0]], [], [], 0, 0]], ['loc', [null, [1, 0], [1, 36]]], 0, 0]],\n        locals: [],\n        templates: []\n      };\n    })()));\n    assert.equal(this.$('.map-container').children().length, 1, 'the map element should be put onscreen');\n    assert.equal(this.get('mapsService.calledWithLocation'), 'New York', 'a map of New York should be requested');\n  });\n});","define('super-rentals/tests/integration/components/location-map-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/location-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/location-map-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/integration/components/rental-listing-test', ['exports', 'ember-qunit', 'ember'], function (exports, _emberQunit, _ember) {\n\n  (0, _emberQunit.moduleForComponent)('rental-listing', 'Integration | Component | rental listing', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('should toggle wide class on click', function (assert) {\n    assert.expect(3);\n    var stubRental = _ember['default'].Object.create({\n      image: 'fake.png',\n      title: 'test-title',\n      owner: 'test-owner',\n      type: 'test-type',\n      city: 'test-city',\n      bedrooms: 3\n    });\n    this.set('rentalObj', stubRental);\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'revision': 'Ember@2.9.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 35\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'rental-listing', [], ['rental', ['subexpr', '@mut', [['get', 'rentalObj', ['loc', [null, [1, 24], [1, 33]]], 0, 0, 0, 0]], [], [], 0, 0]], ['loc', [null, [1, 0], [1, 35]]], 0, 0]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$('.image.wide').length, 0, 'initially rendered small');\n    this.$('.image').click();\n    assert.equal(this.$('.image.wide').length, 1, 'rendered wide after click');\n    this.$('.image').click();\n    assert.equal(this.$('.image.wide').length, 0, 'rendered small after second click');\n  });\n});","define('super-rentals/tests/integration/components/rental-listing-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/rental-listing-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/rental-listing-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/models/rental.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/rental.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/rental.js should pass jshint.');\n  });\n});","define('super-rentals/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('super-rentals/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('super-rentals/tests/routes/about.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/about.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/about.js should pass jshint.');\n  });\n});","define('super-rentals/tests/routes/contact.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/contact.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/contact.js should pass jshint.');\n  });\n});","define('super-rentals/tests/routes/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass jshint.');\n  });\n});","define('super-rentals/tests/routes/rentals.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/rentals.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/rentals.js should pass jshint.');\n  });\n});","define('super-rentals/tests/routes/rentals/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/rentals/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/rentals/index.js should pass jshint.');\n  });\n});","define('super-rentals/tests/routes/rentals/show.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/rentals/show.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/rentals/show.js should pass jshint.');\n  });\n});","define('super-rentals/tests/services/maps.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/maps.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/maps.js should pass jshint.');\n  });\n});","define('super-rentals/tests/test-helper', ['exports', 'super-rentals/tests/helpers/resolver', 'ember-qunit'], function (exports, _superRentalsTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_superRentalsTestsHelpersResolver['default']);\n});","define('super-rentals/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('super-rentals/tests/unit/adapters/application-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('super-rentals/tests/unit/adapters/application-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/adapters/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/application-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/unit/controllers/rentals-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:rentals', 'Unit | Controller | rentals', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('super-rentals/tests/unit/controllers/rentals-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/rentals-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/rentals-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/unit/controllers/rentals/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:rentals/index', 'Unit | Controller | rentals/index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('super-rentals/tests/unit/controllers/rentals/index-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/rentals/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/rentals/index-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/unit/helpers/rental-property-type-test', ['exports', 'super-rentals/helpers/rental-property-type', 'qunit'], function (exports, _superRentalsHelpersRentalPropertyType, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | rental property type');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _superRentalsHelpersRentalPropertyType.rentalPropertyType)([42]);\n    assert.ok(result);\n  });\n});","define('super-rentals/tests/unit/helpers/rental-property-type-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/rental-property-type-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/rental-property-type-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/unit/models/rental-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('rental', 'Unit | Model | rental', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('super-rentals/tests/unit/models/rental-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/rental-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/rental-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/unit/routes/about-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:about', 'Unit | Route | about', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('super-rentals/tests/unit/routes/about-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/about-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/about-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/unit/routes/contact-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:contact', 'Unit | Route | contact', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('super-rentals/tests/unit/routes/contact-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/contact-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/contact-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/unit/routes/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:index', 'Unit | Route | index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject({\n      //make it run only test (not its written logic)\n      replaceWith: function replaceWith(routeName) {\n        assert.equal(routeName, 'rentals', 'replace with route name rentals');\n      }\n    });\n    route.beforeModel();\n  });\n});","define('super-rentals/tests/unit/routes/index-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/index-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/unit/routes/rentals-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:rentals', 'Unit | Route | rentals', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('super-rentals/tests/unit/routes/rentals-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/rentals-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/rentals-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/unit/routes/rentals/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:rentals/index', 'Unit | Route | rentals/index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('super-rentals/tests/unit/routes/rentals/index-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/rentals/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/rentals/index-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/unit/routes/rentals/show-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:rentals/show', 'Unit | Route | rentals/show', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('super-rentals/tests/unit/routes/rentals/show-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/rentals/show-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/rentals/show-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/unit/services/maps-test', ['exports', 'ember-qunit', 'ember'], function (exports, _emberQunit, _ember) {\n\n  var DUMMY_ELEMENT = {};\n\n  var MapUtilStub = _ember['default'].Object.extend({\n    createMap: function createMap(element, location) {\n      this.assert.ok(element, 'createMap called with Element');\n      this.assert.ok(location, 'createMap called with location');\n      return DUMMY_ELEMENT;\n    }\n  });\n\n  (0, _emberQunit.moduleFor)('service:maps', 'Unit | Service | maps', {\n    needs: ['util:google-maps']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('should create a new map if one isnt cached for location', function (assert) {\n    assert.expect(4);\n    var stubMapUtil = MapUtilStub.create({ assert: assert });\n    var mapService = this.subject({ mapUtil: stubMapUtil });\n    var element = mapService.getMapElement('San Francisco');\n    assert.ok(element, 'element exists');\n    assert.equal(element.className, 'map', 'element has class name of map');\n  });\n\n  (0, _emberQunit.test)('should use existing map if one is cached for location', function (assert) {\n    assert.expect(1);\n    var stubCachedMaps = _ember['default'].Object.create({\n      sanFrancisco: DUMMY_ELEMENT\n    });\n    var mapService = this.subject({ cachedMaps: stubCachedMaps });\n    var element = mapService.getMapElement('San Francisco');\n    assert.equal(element, DUMMY_ELEMENT, ' element fetched from cache');\n  });\n});","define('super-rentals/tests/unit/services/maps-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/services/maps-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/maps-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/unit/utils/google-maps-test', ['exports', 'super-rentals/utils/google-maps', 'qunit'], function (exports, _superRentalsUtilsGoogleMaps, _qunit) {\n\n  (0, _qunit.module)('Unit | Utility | google maps');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = _superRentalsUtilsGoogleMaps['default'];\n    assert.ok(result);\n  });\n});","define('super-rentals/tests/unit/utils/google-maps-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/utils/google-maps-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/utils/google-maps-test.js should pass jshint.');\n  });\n});","define('super-rentals/tests/utils/google-maps.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | utils/google-maps.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/google-maps.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('super-rentals/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChjKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACflCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}